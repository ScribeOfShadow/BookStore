@model BookStore.Models.Products

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm(actionName: "Create", controllerName: "Products", routeValues: null, method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="vkr-url-wrapper">
        <div class="col-lg-14">
            <div class="mid">
                <h4 class="lead">Products</h4>
                <hr />

                <table class="table table-striped">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <thead class="form-group">
                       
                        <tr class="col-md-10">
                            @Html.LabelFor(model => model.ProductCatergory.ProductCatergoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownListFor(model=>model.ProductCatergory.CatergoryName, (SelectList)ViewBag.ProductCatergories, "--Select--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProductCatergory, "", new { @class = "text-danger" })
                        </tr>
                    </thead>

                    <thead class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <tr class="col-md-10">
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </tr>
                    </thead>

                    <thead class="form-group">
                        @Html.LabelFor(model => model.ProductAuthor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <tr class="col-md-10">
                            @Html.EditorFor(model => model.ProductAuthor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductAuthor, "", new { @class = "text-danger" })
                        </tr>
                    </thead>


                    <thead class="form-group">
                        @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <tr class="col-md-10">
                            @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
                        <tr />
                    </thead>

                    <thead class="form-group">
                        @Html.LabelFor(model => model.ProductStock, htmlAttributes: new { @class = "control-label col-md-2" })
                        <tr class="col-md-10">
                            @Html.EditorFor(model => model.ProductStock, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductStock, "", new { @class = "text-danger" })
                        </tr>
                    </thead>


                    <thead class="form-group">
                        @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <tr class="col-md-10">
                            @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
                        </tr>
                    </thead>

                    <thead class="form-group">
                        <tr class="col-md-10">
                            <td>
                                <div>@Html.LabelFor(model => model.ProductImage)</div>
                                <div>
                                    <div class="input-group" style="width:1170px">
                                        <div class="input-group-addon ">
                                            <i class="fa fa-file-picture-o"></i>
                                        </div>
                                        <input type="file" name="img_upload" accept=".jpeg,.jpg,.png" onchange="readURL(this);" class="form-control " required="required" />
                                    </div>
                                </div>
                            </td>
                            @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                        </tr>
                    </thead>

                </table>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="AddLinkTab" />
                    </div>
                </div>

            </div>
        </div>
    </div>
}




<div class="AddLinkTab">
    @Html.ActionLink("Back to List", "Index", new { @class = "glyphicon glyphicon-trash" })
</div>

@section Scripts {
    <script type="text/javascript">
        //image preview
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image_preview')
                        .attr('src', e.target.result)
                        .width(400)
                        .height(400);

                };

                reader.readAsDataURL(input.files[0]);
            }
        }</script>
}